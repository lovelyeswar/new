use role sysadmin;
CREATE DATABASE ESWAR;
CREATE SCHEMA DATALOADS;
CREATE OR REPLACE WAREHOUSE ESWAR_WH WITH WAREHOUSE_SIZE = 'XSMALL' AUTO_SUSPEND = 60 AUTO_RESUME = TRUE MIN_CLUSTER_COUNT = 2 MAX_CLUSTER_COUNT = 6;

CREATE TABLE DIL
AS
SELECT * FROM "SNOWFLAKE_SAMPLE_DATA"."TPCH_SF10"."ORDERS" LIMIT 100;

SELECT * FROM "ESWAR"."DATALOADS"."DIL" LIMIT 50;
TRUNCATE TABLE "ESWAR"."DATALOADS"."DIL";

CREATE DATABASE ESWAR_STG;
CREATE SCHEMA DATALOADS;

SELECT GET_DDL('TABLE','"ESWAR"."DATALOADS"."DIL"');

create or replace TABLE DIL (
	O_ORDERKEY VARCHAR,
	O_CUSTKEY VARCHAR,
	O_ORDERSTATUS VARCHAR,
	O_TOTALPRICE VARCHAR,
	O_ORDERDATE VARCHAR,
	O_ORDERPRIORITY VARCHAR,
	O_CLERK VARCHAR,
	O_SHIPPRIORITY VARCHAR,
	O_COMMENT VARCHAR
);

CREATE STAGE ORDERS_S3_STAGE
URL = 's3://eswar-snowflake/ORDERS/'
CREDENTIALS = (AWS_KEY_ID = 'AKIAXDCQZYEM4MIGWHGY' AWS_SECRET_KEY = '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');

show stages;

list @ORDERS_S3_STAGE;

CREATE FILE FORMAT "ESWAR_STG"."DATALOADS"."ESWAR_FORMAT" TYPE = 'CSV' COMPRESSION = 'AUTO' FIELD_DELIMITER = ',' RECORD_DELIMITER = '\n' 
SKIP_HEADER = 1 FIELD_OPTIONALLY_ENCLOSED_BY = '\042' TRIM_SPACE = TRUE ERROR_ON_COLUMN_COUNT_MISMATCH = TRUE ESCAPE = 'NONE'
ESCAPE_UNENCLOSED_FIELD = '\134' DATE_FORMAT = 'AUTO' TIMESTAMP_FORMAT = 'AUTO' NULL_IF = ('\\N');

CREATE PIPE ORDERS_PIPE AUTO_INGEST = TRUE
AS COPY INTO "ESWAR_STG"."DATALOADS"."DIL" FROM @"ESWAR_STG"."DATALOADS"."ORDERS_S3_STAGE"
FILE_FORMAT = '"ESWAR_STG"."DATALOADS"."ESWAR_FORMAT"';

SHOW PIPES;
select system$pipe_status('ORDERS_PIPE');


create OR REPLACE STREAM ORDERS_STREAM ON TABLE "ESWAR_STG"."DATALOADS"."DIL" APPEND_ONLY = TRUE;

CREATE OR REPLACE PROCEDURE ORDERS_PRO()
RETURNS STRING NOT NULL
LANGUAGE JAVASCRIPT
AS
$$
var stream_select_cmd =`
INSERT INTO "ESWAR"."DATALOADS"."DIL"
SELECT 
	O_ORDERKEY::NUMBER(38,0),
	O_CUSTKEY::NUMBER(38,0),
	O_ORDERSTATUS::VARCHAR(1),
	O_TOTALPRICE::NUMBER(12,2),
	TO_DATE(O_ORDERDATE, 'YYYY-MM-DD'),
	O_ORDERPRIORITY::VARCHAR(15),
	O_CLERK::VARCHAR(15),
	O_SHIPPRIORITY::NUMBER(38,0),
	O_COMMENT::VARCHAR(79)
FROM 
"ESWAR_STG"."DATALOADS"."ORDERS_STREAM"
WHERE metadata$Action = 'INSERT';`

var sql_select_stream = snowflake.createStatement({sqlText:stream_select_cmd});
var stream_select_results = sql_select_stream.execute();
return 'Done';
$$;

create or replace TASK ORDERS_TASK
WAREHOUSE = ESWAR_WH
SCHEDULE = '1 MINUTE'
WHEN SYSTEM$STREAM_HAS_DATA('"ESWAR_STG"."DATALOADS"."ORDERS_STREAM"')
AS
CALL ORDERS_PRO();

SELECT * FROM TABLE(INFORMATION_SCHEMA.TASK_HISTORY(TASK_NAME =>'ORDERS_TASK', SCHEDULED_TIME_RANGE_START => DATEADD
                                                    ('HOUR',-1,CURRENT_TIMESTAMP())));
 SELECT SYSTEM$STREAM_HAS_DATA('"ESWAR_STG"."DATALOADS"."ORDERS_STREAM"');
USE ROLE ACCOUNTADMIN;                                    
GRANT EXECUTE TASK ON ACCOUNT TO ROLE SYSADMIN;
USE ROLE SYSADMIN;
ALTER TASK  ORDERS_TASK RESUME;      
ALTER TASK  ORDERS_TASK SUSPEND;  
SHOW PARAMETERS;

ALTER ACCOUNT SET DATE_OUTPUT_FORMAT = 'DD-MM-YYYY';

SELECT * FROM "ESWAR"."DATALOADS"."DIL";

CREATE OR REPLACE PROCEDURE ORDERS_PRO()
RETURNS STRING NOT NULL
LANGUAGE JAVASCRIPT
AS
$$
var stream_select_cmd =`
MERGE INTO "ESWAR"."DATALOADS"."DIL"
USING "ESWAR_STG"."DATALOADS"."ORDERS_STREAM" 
ON DIL.O_ORDERKEY =ORDERS_STREAM.O_ORDERKEY
WHEN MATCHED THEN UPDATE SET
	DIL.O_ORDERKEY = ORDERS_STREAM.O_ORDERKEY,
	DIL.O_CUSTKEY = ORDERS_STREAM.O_CUSTKEY,
	DIL.O_ORDERSTATUS = ORDERS_STREAM.O_ORDERSTATUS,
	DIL.O_TOTALPRICE = ORDERS_STREAM.O_TOTALPRICE,
	DIL.O_ORDERDATE = ORDERS_STREAM.O_ORDERDATE,
	DIL.O_ORDERPRIORITY = ORDERS_STREAM.O_ORDERPRIORITY,
	DIL.O_CLERK = ORDERS_STREAM.O_CLERK,
	DIL.O_SHIPPRIORITY = ORDERS_STREAM.O_SHIPPRIORITY,
	DIL.O_COMMENT= ORDERS_STREAM.O_COMMENT
    
WHEN NOT MATCHED THEN INSERT (O_ORDERKEY,O_CUSTKEY,O_ORDERSTATUS,O_TOTALPRICE,O_ORDERDATE,O_ORDERPRIORITY,O_CLERK,O_SHIPPRIORITY,O_COMMENT)
VALUES (
ORDERS_STREAM.O_ORDERKEY,
	ORDERS_STREAM.O_CUSTKEY,
	ORDERS_STREAM.O_ORDERSTATUS,
	ORDERS_STREAM.O_TOTALPRICE,
	ORDERS_STREAM.O_ORDERDATE,
	ORDERS_STREAM.O_ORDERPRIORITY,
	ORDERS_STREAM.O_CLERK,
	ORDERS_STREAM.O_SHIPPRIORITY,
	ORDERS_STREAM.O_COMMENT
)`
var sql_select_stream = snowflake.createStatement({sqlText:stream_select_cmd});
var stream_select_results = sql_select_stream.execute();
return 'Done';
$$;